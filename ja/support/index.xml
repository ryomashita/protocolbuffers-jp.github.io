<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Protocol Buffers Documentation – サポート</title><link>https://protobuf.dev/ja/support/</link><description>Recent content in サポート on Protocol Buffers Documentation</description><generator>Hugo -- gohugo.io</generator><language>ja</language><atom:link href="https://protobuf.dev/ja/support/index.xml" rel="self" type="application/rss+xml"/><item><title>Support:</title><link>https://protobuf.dev/ja/support/migration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://protobuf.dev/ja/support/migration/</guid><description>
&lt;h2 id="compiler-22">移行ガイド&lt;/h2>
&lt;h3 id="json-field-names">JSON フィールド名の競合&lt;/h3>
&lt;p>変更のソース: &lt;a href="https://github.com/protocolbuffers/protobuf/pull/11349">PR #11349&lt;/a>, &lt;a href="https://github.com/protocolbuffers/protobuf/pull/10750">PR #10750&lt;/a>&lt;/p>
&lt;p>JSON マッピングに関するフィールド名の競合の扱いにいくつかの微妙な変更を加えました。proto3 では、フィールド名が大文字と小文字を区別する JSON マッピング（元の名前のキャメルケース）を生成する場合にのみエラーを出すように制限を部分的に緩和しました。また、&lt;code>json_name&lt;/code> オプションもチェックし、大文字と小文字を区別する競合に対してエラーを出します。proto2 では、2 つの &lt;code>json_name&lt;/code> 仕様が競合する場合にエラーを出すように制限を強化しました。暗黙の JSON マッピング（キャメルケース）が競合する場合は、proto2 では警告を出します。&lt;/p>
&lt;p>競合するフィールド名をリネームすることがすぐにできない場合は、特定のメッセージ/列挙型に &lt;code>deprecated_legacy_json_field_conflicts&lt;/code> オプションを設定して、従来の動作を復元する一時的なオプションを提供しています。このオプションは将来のリリースで削除されますが、移行に時間を与えます。&lt;/p>
&lt;h2 id="cpp-22">C++ API の変更&lt;/h2>
&lt;p>4.22.0 では、C++ ランタイムと protoc に対して破壊的な変更があります。これは
&lt;a href="https://protobuf.dev/news/2022-08-03#cpp-changes">8 月に発表されました&lt;/a>。&lt;/p>
&lt;h3 id="autotools">Autotools の廃止&lt;/h3>
&lt;p>変更のソース:
&lt;a href="https://github.com/protocolbuffers/protobuf/pull/10132">PR #10132&lt;/a>&lt;/p>
&lt;p>v22.0 では、protobuf コンパイラと C++ ランタイムから Autotools サポートをすべて削除しました。これらのいずれかをビルドするために Autotools を使用している場合は、&lt;a href="http://cmake.org">CMake&lt;/a> または
&lt;a href="http://bazel.build">Bazel&lt;/a> に移行する必要があります。CMake で protobuf をセットアップするための
&lt;a href="https://github.com/protocolbuffers/protobuf/blob/main/cmake/README.md">専用の手順&lt;/a>
があります。&lt;/p>
&lt;h3 id="abseil">Abseil 依存関係&lt;/h3>
&lt;p>変更のソース：
&lt;a href="https://github.com/protocolbuffers/protobuf/pull/10416">PR #10416&lt;/a>&lt;/p>
&lt;p>v22.0 では、明示的に
&lt;a href="https://github.com/abseil/abseil-cpp">Abseil&lt;/a> に依存するようになりました。これにより、ほとんどの
&lt;a href="https://github.com/protocolbuffers/protobuf/tree/21.x/src/google/protobuf/stubs">スタブ&lt;/a> を削除することができました。これらは、以前の内部コードから派生した古いコードであり、後に Abseil になりました。いくつかの微妙な動作の変更がありますが、ほとんどはユーザーには透過的であるはずです。いくつかの注目すべき変更点は次のとおりです：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>string_view&lt;/strong> - &lt;code>absl::string_view&lt;/code> が &lt;code>const std::string&amp;amp;&lt;/code> の代わりに多くの API で使用されるようになりました。これは、主に入力引数に使用され、ユーザーには目立った変更がないはずです。一部の場合（仮想メソッドの引数や戻り値など）では、新しいシグネチャを使用するために明示的な変更が必要になるかもしれません。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>tables&lt;/strong> - STL のセット/マップの代わりに、Abseil の &lt;code>flat_hash_map&lt;/code>、&lt;code>flat_hash_set&lt;/code>、&lt;code>btree_map&lt;/code>、&lt;code>btree_set&lt;/code> を使用しています。これらはより効率的であり、&lt;a href="https://abseil.io/tips/144">異種検索&lt;/a> を可能にします。これは、ユーザーにはほとんど見えないはずですが、テーブルの順序に関連するいくつかの微妙な動作の変更が発生する可能性があります。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>logging&lt;/strong> - Abseil の
&lt;a href="https://abseil.io/docs/cpp/guides/logging">ログライブラリ&lt;/a> は、古いログコードと非常に似ており、わずかに異なるスペル（たとえば、&lt;code>ABSL_CHECK&lt;/code> の代わりに &lt;code>GOOGLE_CHECK&lt;/code>）があります。最大の違いは、例外をサポートしていないことであり、&lt;code>FATAL&lt;/code> アサーションが失敗した場合には常にクラッシュするようになりました（以前は &lt;code>PROTOBUF_USE_EXCEPTIONS&lt;/code> フラグを使用して例外に切り替えていました）。これらは深刻な問題が発生した場合にのみ発生するため、無条件でクラッシュするのが適切な対応だと考えています。&lt;/p>
&lt;p>ログの変更のソース：&lt;a href="https://github.com/protocolbuffers/protobuf/pull/11623">PR #11623&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>ビルド依存関係&lt;/strong> - 新しいビルド依存関係は常にダウンストリームユーザーに問題を引き起こす可能性があります。ビルドには、必ず
&lt;a href="https://github.com/abseil/abseil-cpp/releases/tag/20230117.rc1">Abseil LTS 20230117&lt;/a>
またはそれ以降のバージョンが必要です。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Bazel ビルドでは、&lt;a href="https://github.com/protocolbuffers/protobuf/blob/main/protobuf_deps.bzl">&lt;code>protobuf_deps&lt;/code>&lt;/a> が &lt;code>WORKSPACE&lt;/code> から実行されると、Abseil はピン留めされた LTS リリースで自動的にダウンロードおよびビルドされます。これは透過的に行われるはずですが、古いバージョンの Abseil に依存している場合は、依存関係をアップグレードする必要があります。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>CMake ビルドでは、まず既存の Abseil インストールを探します。これはトップレベルの CMake 構成によって引き込まれます（詳細は&lt;a href="https://github.com/abseil/abseil-cpp/blob/master/CMake/README.md#traditional-cmake-set-up">こちら&lt;/a>）。それ以外の場合、&lt;code>protobuf_ABSL_PROVIDER&lt;/code> が &lt;code>module&lt;/code> に設定されている場合（デフォルト）、git の&lt;a href="https://github.com/protocolbuffers/protobuf/tree/main/third_party">サブモジュール&lt;/a>から Abseil をビルドおよびリンクしようとします。&lt;code>protobuf_ABSL_PROVIDER&lt;/code> が &lt;code>package&lt;/code> に設定されている場合、事前にインストールされたシステムバージョンの Abseil を探します。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="getcurrenttime">GetCurrentTime メソッドの変更&lt;/h3>
&lt;p>Windows では、&lt;code>GetCurrentTime()&lt;/code> はシステムによって提供されるマクロの名前です。v22.x より前では、Protobuf は誤って &lt;code>GetCurrentTime()&lt;/code> のマクロ定義を削除していました。これにより、&lt;code>&amp;lt;protobuf/util/time_util.h&amp;gt;&lt;/code> を含んだ後に Windows 開発者が &lt;code>GetCurrentTime()&lt;/code> マクロを使用できなくなりました。v22.x 以降、Protobuf はマクロ定義を保持します。これにより、以前の動作に依存していた顧客コードが壊れる可能性があります。たとえば、&lt;a href="https://protobuf.dev/reference/cpp/api-docs/google.protobuf.util.time_util.md#TimeUtil">&lt;code>google::protobuf::util::TimeUtil::GetCurrentTime()&lt;/code>&lt;/a> を使用している場合です。&lt;/p>
&lt;p>アプリを新しい動作に移行するには、次のいずれかの方法でコードを変更してください：&lt;/p>
&lt;ul>
&lt;li>&lt;code>GetCurrent&lt;/code> マクロが定義されている場合は、明示的に &lt;code>GetCurrentTime&lt;/code> マクロを未定義にする&lt;/li>
&lt;li>マクロの展開を防ぐために、&lt;code>(google::protobuf::util::TimeUtil::GetCurrentTime)()&lt;/code> または類似の式を使用する&lt;/li>
&lt;/ul>
&lt;h4 id="マクロの未定義化の例">マクロの未定義化の例&lt;/h4>
&lt;p>このアプローチは、Windows のマクロを使用しない場合に使用します。&lt;/p>
&lt;p>変更前：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#include&lt;/span> &lt;span style="color:#8f5902;font-style:italic">&amp;lt;google/protobuf/util/time_util.h&amp;gt;&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">F&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">auto&lt;/span> &lt;span style="color:#000">time&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">google&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">protobuf&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">util&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">TimeUtil&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">GetCurrentTime&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#include&lt;/span> &lt;span style="color:#8f5902;font-style:italic">&amp;lt;google/protobuf/util/time_util.h&amp;gt;&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#ifdef GetCurrent
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#undef GetCurrentTime
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">F&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">auto&lt;/span> &lt;span style="color:#000">time&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">google&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">protobuf&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">util&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">TimeUtil&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">GetCurrentTime&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>例2: マクロの展開を防ぐ&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#include&lt;/span> &lt;span style="color:#8f5902;font-style:italic">&amp;lt;google/protobuf/util/time_util.h&amp;gt;&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">F&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">auto&lt;/span> &lt;span style="color:#000">time&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">google&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">protobuf&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">util&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">TimeUtil&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">GetCurrentTime&lt;/span>&lt;span style="color:#000;font-weight:bold">();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#include&lt;/span> &lt;span style="color:#8f5902;font-style:italic">&amp;lt;google/protobuf/util/time_util.h&amp;gt;&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">void&lt;/span> &lt;span style="color:#000">F&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">auto&lt;/span> &lt;span style="color:#000">time&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">google&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">protobuf&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">util&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">TimeUtil&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">::&lt;/span>&lt;span style="color:#000">GetCurrentTime&lt;/span>&lt;span style="color:#000;font-weight:bold">)();&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="cpp20">C++20 サポート&lt;/h2>
&lt;p>変更のソース: &lt;a href="https://github.com/protocolbuffers/protobuf/pull/10796">PR #10796&lt;/a>&lt;/p>
&lt;p>C++20 をサポートするために、C++ で生成された protobuf コードに新しい
&lt;a href="https://en.cppreference.com/w/cpp/keyword">keywords&lt;/a> を予約しました。
他の予約されたキーワードと同様に、これらをフィールド、列挙型、またはメッセージで使用する場合、
それらを有効な C++ にするためにアンダースコアの接尾辞を追加します。
たとえば、&lt;code>concept&lt;/code> フィールドは &lt;code>concept_()&lt;/code> ゲッターを生成します。
これらのキーワードを使用する既存の proto がある場合、これらのキーワードを参照する C++ コードを更新して、
適切なアンダースコアを追加する必要があります。&lt;/p>
&lt;h3 id="final-classes">最終クラス&lt;/h3>
&lt;p>変更のソース: &lt;a href="https://github.com/protocolbuffers/protobuf/pull/11604">PR #11604&lt;/a>&lt;/p>
&lt;p>Protobuf ライブラリで行われた前提条件を強化する大規模な取り組みの一環として、
意図されていないクラスを継承することが決して意図されていなかったクラスを &lt;code>final&lt;/code> でマークしました。
これらから継承するための既知のユースケースはありませんし、そうすると問題が発生する可能性が高いです。
これらのクラスから継承している場合の緩和策はありませんが、継承の有効な理由があると考える場合は、
&lt;a href="https://github.com/protocolbuffers/protobuf/issues">問題を開く&lt;/a>ことができます。&lt;/p>
&lt;h3 id="container-static-assertions">コンテナ静的アサーション&lt;/h3>
&lt;p>変更のソース: &lt;a href="https://github.com/protocolbuffers/protobuf/pull/11550">PR #11550&lt;/a>&lt;/p>
&lt;p>Protobuf ライブラリで行われた前提条件を強化する大規模な取り組みの一環として、
&lt;code>Map&lt;/code>、&lt;code>RepeatedField&lt;/code>、および &lt;code>RepeatedPtrField&lt;/code> コンテナに静的アサーションを追加しました。
これにより、これらのコンテナを予想される型のみで使用していることを確認します。
これらの静的アサーションに遭遇した場合は、コードを Abseil または STL コンテナを使用するように移行する必要があります。
&lt;code>std::vector&lt;/code> は繰り返しフィールドコンテナの良い置換ですし、&lt;code>std::unordered_map&lt;/code> または &lt;code>absl::flat_hash_map&lt;/code> は &lt;code>Map&lt;/code> に対して適しています
（前者は同様のポインタの安定性を提供し、後者はより効率的です）。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-mysql" data-lang="mysql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">### クリアされた要素の非推奨化 {#cleared-elements}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#a40000">変更のソース&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">PR&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic">#11588](https://github.com/protocolbuffers/protobuf/pull/11588), [PR #11639](https://github.com/protocolbuffers/protobuf/pull/11639)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;クリアされたフィールド&amp;#34;&lt;/span>&lt;span style="color:#a40000">に関する&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#000">RepeatedPtrField&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">API&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">が非推奨となり、後の破壊的なリリースで完全に削除されます。これは、要素をクリアした後に再利用するための最適化として元々追加されましたが、うまく機能しないことが判明しました。この&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">API&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">を使用している場合は、メモリ再利用のためにアリーナに移行することを検討する必要があります。&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">### UnsafeArena の非推奨化 {#unsafe-arena}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#a40000">変更のソース&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">PR&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic">#10325](https://github.com/protocolbuffers/protobuf/pull/10325)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#a40000">アリーナ非安全な&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">API&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">を削除する取り組みの一環として、&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#000">RepeatedField&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>&lt;span style="color:#000">UnsafeArenaSwap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">を非表示にしました。これは、これまでに削除した唯一のものですが、後のリリースではこれらを継続的に削除し、アリーナ間で効率的な借用パターンを処理するヘルパーを提供します。単一のアリーナ内（またはスタック&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#a40000">ヒープ内）では、&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#000">Swap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">は&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#000">UnsafeArenaSwap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">と同じくらい効率的です。利点は、異なるアリーナ間で誤って呼び出すと無効なメモリ操作を引き起こさないことです。&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">### Map ペアのアップグレード {#map-pairs}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#a40000">変更のソース&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">PR&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic">#11625](https://github.com/protocolbuffers/protobuf/pull/11625)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">v22&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">では、&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#000">Map&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">API&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">を&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Abseil&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">と&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">STL&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">とより一貫性のあるものにする作業を開始しました。特に、&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#000">MapPair&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">クラスを&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#000">std&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>&lt;span style="color:#000">pair&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">へのエイリアスに置き換えました。これはほとんどのユーザーにとって透過的であるはずですが、クラスを直接使用していた場合はコードを更新する必要があるかもしれません。&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">### 新しい JSON パーサー {:#json-parser}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#a40000">変更のソース&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">PR&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic">#10729](https://github.com/protocolbuffers/protobuf/pull/10729)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#a40000">このリリースでは、&lt;/span>&lt;span style="color:#000">C&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">++&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">の&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">JSON&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">パーサーを書き直しました。これは主に隠れた変更であるはずですが、不文書のクセが変わっている可能性があります。&lt;/span>&lt;span style="color:#000">RFC&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">8219&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">JSON&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">でないドキュメント（クォートが抜けていたり、非標準のブール値を使用しているなど）を解析することは非推奨であり、将来のリリースで削除されます。フィールドのシリアル化順序は、以前はより決定論的ではなかったが、現在はフィールド番号の順序と一致するように保証されています。&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#a40000">この移行の一環として、&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">util&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">internal&lt;/span>&lt;span style="color:#000;font-weight:bold">](&lt;/span>&lt;span style="color:#000">https&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">//&lt;/span>&lt;span style="color:#000">github&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">com&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">protocolbuffers&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">protobuf&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">tree&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">21&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">x&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">src&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">google&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">protobuf&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">util&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">/&lt;/span>&lt;span style="color:#000">internal&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">のすべてのファイルが削除されました。これらは古いパーサーで使用されており、外部で使用することは意図されていませんでした。&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">### `Arena::Init` {#arena-init}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#a40000">変更のソース&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">PR&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic">#10623](https://github.com/protocolbuffers/protobuf/pull/10623)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#000">Arena&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">の&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#000">Init&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">メソッドは何も行わないコードであり、現在削除されました。このメソッドを呼び出していた場合、おそらく&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#000">Arena&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">コンストラクタに直接&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#000">ArenaOptions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">のセットを指定して呼び出すことを意図していたはずです。その呼び出しを削除するか、そのコンストラクタに移行する必要があります。&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#8f5902;font-style:italic">### ErrorCollector 移行 {#error-collector}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#a40000">変更のソース&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">PR&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic">#11555](https://github.com/protocolbuffers/protobuf/pull/11555)
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000">Abseil&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">移行の一環として、&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#000">const&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">std&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>&lt;span style="color:#000">string&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;`&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">から&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#000">absl&lt;/span>&lt;span style="color:#000;font-weight:bold">::&lt;/span>&lt;span style="color:#000">string_view&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">に移行しています。&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#a40000">つのエラーコレクタークラスについては、既存のコードを壊さずにこれを行うことはできません。&lt;/span>&lt;span style="color:#000">v22&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">では、両方のバリアントをリリースすることにし、&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#000">AddError&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">と&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#000">AddWarning&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">メソッドを&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#000">RecordError&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">と&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#000">RecordWarning&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">に名前を変更しました。古いシグネチャは非推奨とマークされ、若干効率が低下します（文字列のコピーのため）、それ以外は引き続き機能します。これらを新しいバージョンに移行する必要があります。&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">`&lt;/span>&lt;span style="color:#204a87;font-weight:bold">Add&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">*`&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#a40000">メソッドは後の破壊的リリースで削除されます。&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>